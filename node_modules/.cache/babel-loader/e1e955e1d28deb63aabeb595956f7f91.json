{"remainingRequest":"/home/alcamo/Dvote/node_modules/babel-loader/lib/index.js!/home/alcamo/Dvote/node_modules/eslint-loader/index.js??ref--13-0!/home/alcamo/Dvote/contracts/web3.js","dependencies":[{"path":"/home/alcamo/Dvote/contracts/web3.js","mtime":1597770749158},{"path":"/home/alcamo/Dvote/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alcamo/Dvote/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/alcamo/Dvote/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//imports the Web3 API\nimport Web3 from 'web3';\n/**\n * creates & exports new instance for \n * Web3 using provided service by Metamask.\n */\n\nvar currentWeb3;\n\nif (window.ethereum) {\n  var instance = new Web3(window.ethereum);\n\n  try {\n    // Request account access if needed\n    window.ethereum.enable(); // Acccounts now exposed\n\n    currentWeb3 = instance;\n  } catch (error) {\n    // User denied account access...\n    alert('Permita el acceso para que la aplicación funcione');\n  }\n} else if (window.web3) {\n  currentWeb3 = new Web3(web3.currentProvider); // Acccounts always exposed\n} else {//console.log('El browser no es Ethereum. Considere probar MetaMask');\n  }\n\nvar web3 = currentWeb3; //console.log('web3');\n\nexport default web3;",{"version":3,"sources":["/home/alcamo/Dvote/contracts/web3.js"],"names":["Web3","currentWeb3","window","ethereum","instance","enable","error","alert","web3","currentProvider"],"mappings":"AAAA;AACA,OAAOA,IAAP,MAAiB,MAAjB;AAEA;;;;;AAIA,IAAIC,WAAJ;;AAEA,IAAIC,MAAM,CAACC,QAAX,EAAqB;AACjB,MAAIC,QAAQ,GAAG,IAAIJ,IAAJ,CAASE,MAAM,CAACC,QAAhB,CAAf;;AACA,MAAI;AACA;AACAD,IAAAA,MAAM,CAACC,QAAP,CAAgBE,MAAhB,GAFA,CAGA;;AACAJ,IAAAA,WAAW,GAAGG,QAAd;AACH,GALD,CAKE,OAAOE,KAAP,EAAc;AACZ;AACAC,IAAAA,KAAK,CAAC,mDAAD,CAAL;AACH;AACJ,CAXD,MAWO,IAAIL,MAAM,CAACM,IAAX,EAAiB;AACpBP,EAAAA,WAAW,GAAG,IAAID,IAAJ,CAASQ,IAAI,CAACC,eAAd,CAAd,CADoB,CAEpB;AACH,CAHM,MAIF,CACD;AACH;;AAED,IAAMD,IAAI,GAAGP,WAAb,C,CACA;;AACA,eAAeO,IAAf","sourcesContent":["//imports the Web3 API\nimport Web3 from 'web3';\n\n/**\n * creates & exports new instance for \n * Web3 using provided service by Metamask.\n */\nlet currentWeb3;\n\nif (window.ethereum) {\n    let instance = new Web3(window.ethereum);\n    try {\n        // Request account access if needed\n        window.ethereum.enable();\n        // Acccounts now exposed\n        currentWeb3 = instance;\n    } catch (error) {\n        // User denied account access...\n        alert('Permita el acceso para que la aplicación funcione');\n    }\n} else if (window.web3) {\n    currentWeb3 = new Web3(web3.currentProvider);\n    // Acccounts always exposed\n}\nelse {\n    //console.log('El browser no es Ethereum. Considere probar MetaMask');\n}\n\nconst web3 = currentWeb3\n//console.log('web3');\nexport default web3;"]}]}